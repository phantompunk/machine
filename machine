#!/usr/bin/env bash
 
set -e
 
case "$OSTYPE" in
  darwin*) MACHINE="OSX" ;;
  linux*)  MACHINE="LINUX" ;;
  *)       MACHINE="UNKNOWN" ;;
esac
 
coloredEcho() {
    local exp="$1";
    local color="$2";
    local arrow="$3";
    if ! [[ $color =~ ^[0-9]$ ]] ; then
       case $(echo "$color" | tr '[:upper:]' '[:lower:]') in
        black) color=0 ;;
        red) color=1 ;;
        green) color=2 ;;
        yellow) color=3 ;;
        blue) color=4 ;;
        magenta) color=5 ;;
        cyan) color=6 ;;
        white|*) color=7 ;; # white or invalid color
       esac
    fi
    tput bold;
    tput setaf "$color";
    echo "$arrow $exp";
    tput sgr0;
}
 
 
info() {
    coloredEcho "$1" blue "====>"
}
 
ok() {
    coloredEcho "$1" green "====>"
}
 
warn() {
    coloredEcho "$1" yellow "====>"
}
 
error() {
    coloredEcho "$1" red "====>"
}
 
einfo() {
    coloredEcho "$1" magenta "======"
}
 
eok() {
    coloredEcho "$1" cyan "========"
}
 
ewarn() {
    coloredEcho "$1" yellow "====>"
}
 
eerror() {
    coloredEcho "$1" red "========"
}
 
abort() {
  error "$@" >&2 
  exit 1
}
 
 
info "Installing Xcode command line tools..."
if xcode-select --print-path &>/dev/null; then
    ok "XCode command line tools already installed."
elif xcode-select --install &>/dev/null; then
    ok "Finished installing XCode command line tools."
else
    abort "Failed to install XCode command line tools."
fi

if [ "$MACHINE" == "OSX" ] && ! [ -x "$(command -v fish)" ];
then
    info "Adjusting macOS settings."
    einfo "Enabling tap to click."
    defaults write com.apple.AppleMultitouchTrackpad Clicking -bool true
    einfo "Enabling secondary click on mouse."
    defaults write com.apple.driver.AppleBluetoothMultitouch.mouse MouseButtonMode TwoButton
    einfo "Remap Caps Lock to Escape."
    hidutil property --set '{"UserKeyMapping":[{"HIDKeyboardModifierMappingSrc":0x700000039,"HIDKeyboardModifierMappingDst":0x700000029}]}'
fi

info "Checking Git installation"
if ! [ -x "$(command -v git)" ];
then
    error "Git command not found."
    abort "You must install Git before continuing."
else
    ok "Git already installed."
fi
 
info "Installing Homebrew formulae..."
if ! [ -x "$(command -v brew)" ];
then
    # /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)";
    if [ "$MACHINE" == "OSX" ]; then
        einfo "Adding Homebrew to OSX PATH.";
        (echo; echo "eval \"$(/opt/homebrew/bin/brew shellenv)\"") >> "$HOME"/.zprofile
        eval "$(/opt/homebrew/bin/brew shellenv)"
        eok "Homebrew successfully installed."
    fi
else
  ok "Homebrew already installed."
fi
 
info "Updating Homebrew formulae..."
if [[ -x "$(command -v brew)" && -f ./Brewfile ]]; then
  einfo "Using Homebrew Brewfile: ./Brewfile."
  brew bundle install --file ./Brewfile
  eok "Homebrew bundle successfully installed."
else
  echo "File does not exist."
fi
 
info "Installing Fish Shell..."
if ! [ -x "$(command -v fish)" ];
then
    brew install fish
    eok "Fish shell installed"
else
    ok "Fish shell already installed"
fi
 
info "Changing default shell to Fish shell."
if [[ "$SHELL" != *"fish"* ]];
then
    which fish | sudo tee -a /etc/shells
    chsh -s "$(which fish)"
    eok "Changed the defualt shell to Fish."
    einfo "Add Homebrew to Fish Path."
    einfo "fish_add_path /opt/homebrew/bin"
else
    ok "Fish shell already set as default shell."
fi

info "Configuring directories for Go..."
if ! [ -d "$HOME/go" ];
then
    einfo "Creating directory for go."
    mkdir -p "$HOME"/go/{bin,src,pkg}/
    eok "Folders ~/go/{bin,src,pkg} created successfully."
else
    ok "Go directory already configured."
fi
 
info "Installing apps from AppStore..."
if [ -x "$(command -v mas)" ];
then
    # install flow-focus-pomodoro-timer
    mas install 1423210932 
    # install amphetamine
    mas install 937984704 
    # install nordvpn-vpn-fast-secure
    mas install 905953485
    eok "Installed apps succesfully."
fi


